gitbook 的基本用法非常简单，基本上就只有两步：

1. 使用 gitbook init 初始化书籍目录
2. 使用 gitbook serve 编译书籍

```bash
gitbook init
```
首先，创建如下目录结构：
```bash
$ tree book/
book/
├── README.md
└── SUMMARY.md

0 directories, 2 files
```
README.md 和 SUMMARY.md 是两个必须文件，README.md 是对书籍的简单介绍：
```bash
$ cat book/README.md
# README

This is a book powered by [GitBook](https://github.com/GitbookIO/gitbook).
```
SUMMARY.md 是书籍的目录结构。内容如下：
```bash
$ cat book/SUMMARY.md
# SUMMARY

* [Chapter1](chapter1/README.md)
  * [Section1.1](chapter1/section1.1.md)
  * [Section1.2](chapter1/section1.2.md)
* [Chapter2](chapter2/README.md)
```

创建了这两个文件后，使用 gitbook init，它会为我们创建 SUMMARY.md 中的目录结构。
```bash
$ cd book
$ gitbook init
$ tree
.
├── README.md
├── SUMMARY.md
├── chapter1
│   ├── README.md
│   ├── section1.1.md
│   └── section1.2.md
└── chapter2
    └── README.md

2 directories, 6 files
```
注意：gitbook init 只支持两级目录！

```bash
gitbook serve
```
书籍目录结构创建完成以后，就可以使用 gitbook serve 来编译和预览书籍了：
```bash
$ gitbook serve
Press CTRL+C to quit ...

Live reload server started on port: 35729
Starting build ...
Successfully built!

Starting server ...
Serving book on http://localhost:4000
```
gitbook serve 命令实际上会首先调用 gitbook build 编译书籍，完成以后会打开一个 web 服务器，监听在本地的 4000 端口。

现在，可以用浏览器打开 http://127.0.0.1:4000 查看书籍的效果。

现在，gitbook 为我们创建了书籍目录结构后，就可以向其中添加真正的内容了，文件的编写使用 markdown 语法，在文件修改过程中，每一次保存文件，gitbook serve 都会自动重新编译，所以可以持续通过浏览器来查看最新的书籍效果！
